Direct3D는 응용 프로그램을 GPU에서 실행하게 해줌

Device Context (D.C) -> Hardware Device 
선을 그리는, 글씨는 쓰는 명령어 등 윈도우 클라이언트 영역에 무엇인가를
출력할때 거치는 곳

Direct3D를 사용하기 위해선 d3d12.lib 라이브러리를 임포트 해야한다
대부분은 DLL ( Dynamic Linked Library)을 사용 DLL은 실행할떄 동작 
그때그때 라이브러리가 필요할때마다 참조함 ( 메모리의 양 때문 )
DLL에는 소스코드가 들어있는데 그중 함수의 목록 등의 간단한 정보들을
lib으로 따로 구성하여 프로그램이 실행될때 찾아서 사용하도록 하는것

그래픽카드가 1초동안 보낼수있는 픽셀의 개수 :  비트레이트
화면해상도 x 60 ( 1920 x 1200 x 60 )

색상의 정규화를 하는 이유 : CPU에서 받는 색상값의 비트수를 통일하기 위해서
색상은 DirectXColors.h 에서 XMCOLOR라는 자료형으로 표현하는데
XMCOLOR는 R G B A 4개의 값으로 표현되기 떄문에 DirectXPackedVector.h를 통해
XMVECTOR로 표현할 수 있다 혹은 XMFLOAT4로 표현
색상벡터의 덧셈 : 색상 혼합
색상벡터의 뺄셈 : 남은 색상 추출 (보색 추출) 더해서 흰색을 만들 수 있는 색상
색상벡터의 스칼라곱 : 색상의 밝기 조절

이중버퍼링을 쓰지 않을경우 출력이 곧바로 화면에 일어나기 때문에 화면 깜빡임이나
스크린 티어링 현상발생
스왑체인 : 순차적으로 연결된 프레임 버퍼들의 집합
프리젠테이션 : 후면버퍼를 전면버퍼로 전면버퍼는 디스플레이로 옮기는 것
플리핑 or 스왑 : 하드웨어적인 방법으로 전면버퍼와 후면버퍼를 바꾸는 방법
                     내용을 바꾸는게 아닌 교체 ( C++의 경우 포인터값만 교체함 ) 빠름
블리트 : 버퍼의 내용을 복사 ( 느림 )

삼중이상 프레임 버퍼를 사용할때 ( 후면 버퍼가 2개 이상 )는 멀티 쓰레딩이 필요함

전체화면 모드에는 하드웨어적으로 플리핑이 사용이 가능하지만
창모드에서는 블리트로만 사용할수있음

COM ( Component Object Model ) 객체
DLL형태로 제공
프로그램에서 COM객체는 인터페이스 내부에 존재해서 
인터페이스 포인터를 통하여 참조

(중요) 인터페이스
인터페이스(Interface)란 클래스와 비슷하지만  다름
인터페이스와 클래스의 차이점 
1. 인터페이스는 객체로 만들지 못함
2. 클래스는 구체적인 정보를 담고 있음
클래스는 하위클래스로 내려갈수록 구체적(특별) 위로 올라갈수록 추상적(일반적)
ex) 포유류  	A : 상위 - 추상적 ( 일반적 )
  		|
    사람		B
  		|
    학생		C : 하위 - 구체적 ( 특별 )
위로 올라갈수록 멤버변수는 줄어듦 결국 끝까지 올라가서 멤버변수가 하나도 없는
클래스를 Interface라고 함 - 데이터가 없는 클래스 극도로 추상적인 클래스
즉 인터페이스는 멤버 함수만 가지고있는 코드의 내용도 필요 없는 것
함수 이름만 가지고있음 ( 필요한 연산만 정의해놓음 ) 루트 클래스
대신 나머지를 숨겨둘수있음 또한 인터페이스자체는 추상적이기 때문에 
바뀔일이 없음 디테일은 내부에서 달라지는 것

모든 Direct3D 객체는 COM객체

IUnknown 인터페이스
COM 인터페이스는 IUnknown으로 표현함 (I는 Interface를 뜻함)
IUnknown은 public 멤버함수 3개가 제공이 됨
IUnKnown::QueryInterface란 이 객체가 어떤 정보를 제공하는지 물어보는 것
모든 COM객체들은 내부적으로 레퍼런스 카운터라고 하는 int 멤버변수 하나를 가짐
Direct3D객체는 생성을 위한 API함수가 별도로 존재 ( new연산자 사용x )
Direct3D객체는 delete연산자를 사용x 참조 카운트가 0이면 단순히 IUnknown의
Release()함수를 호출한다 공유를 목적으로 만들어지기 때문에 delete를 
사용해서는 안된다 카운트가 0이 된 COM객체는 운영체제의 가비지 콜렉터가
회수한다. 참조 카운트가 0이 되지 않게 잘 관리해야 한다 ( 필요할떄만 )









