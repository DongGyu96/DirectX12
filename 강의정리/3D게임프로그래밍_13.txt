DXGI
Direct3D에서 연산된 랜더링결과를 운영체제에따라 알맞게 적용시키는 라이브러리
다이렉트3D 버전과 상관없이 기본적인 내용들
( 스왑체인, 프리젠트, 그래픽카드 열거, 모니터 열거, 전체화면모드전환 )

전면버퍼는 절대 접근할 수 없다 접근할 수 있는 모든 버퍼는 후면버퍼

버전이 올라간 DXGI클래스들은 이전버전으로부터 상속받았기때문에
모든 멤버변수와 함수를 사용할 수 있다

DXGI 인터페이스 클래스 구조 중요
Direct3D 디바이스 구조도
ID3D12GraphicsCommandList 인터페이스 구조
ID3D12Device 구조

가장 먼저 만들어야 하는 COM객체는 IDXGIFactory

DXGI와 Dirct3D API함수는 대부분 HRESULT 반환값을 제공 이값으로 예외처리
HRESULT로 반환되는 모든 함수는 반드시 예외처리를 해야한다

모든 DXGI함수에는 GetDesc라는 함수가 있음
Description : 서술하다, 묘사하다
현재 DXGI함수가 가지고 있는 정보를 구조체형식으로 반환함

저수준 프로그래밍이 가능하다는건
개발자가 직접 하나하나 프로그래밍할 수 있는것 예외처리를 직접
C와 C++의 차이점처럼 C는 C++보다 저수준이라 컴파일러가 예외처리를 적게 함
다이렉트11은 그래픽카드드라이버가 많은걸 했지만 다이렉트12는 개발자가
직접 설정하도록함

Direct3D 12
CPU와 GPU 모두가 대기시간을 최소화하도록 프로그래밍하게 지원
프로그래머가 CPU와 GPU를 동기화하는것을 명시적으로 책임

Direct3D 디바이스는 상태 기계(State Machine)이다
상태를 명시적으로 바꾸지 않는다면 이전 상태를 나타낼것이다
상태를 명시적으로 만들어내지않으면 기본 상태를 가지고있을것이다
첫번째로 해야하는것은 내가 원하는 상태로 Set하는것
렌더링이라는 것은 Sets & Draw 이라 할 수 있다.

